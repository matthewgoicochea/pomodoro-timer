{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); //mg:\n\n  function playPause() {\n    handlePlay();\n    setIsTimerRunning(prevState => !prevState);\n\n    if (isTimerRunning == true) {\n      console.log(\"Pause\"); //display paused div\n\n      const paused = document.querySelector(\"#paused\");\n      paused.classList.add(\"d-block\");\n      paused.classList.remove(\"d-none\");\n    } else if (isTimerRunning == false) {\n      console.log(\"Play\"); // hide paused div\n\n      const paused = document.querySelector(\"#paused\");\n      paused.classList.add(\"d-none\");\n      paused.classList.remove(\"d-block\"); //on play handle progress bar\n\n      handleAria();\n    }\n  }\n\n  const handlePlay = () => {\n    //enable stop button\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\"); //disable timer buttons\n\n    const timerBtns = document.querySelectorAll(\"#timerButton\"); ///iterate nodeList and add disable buttons\n\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.setAttribute(\"disabled\", true);\n    } //showing session info after play click\n\n\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.remove(\"d-none\");\n    sessionInfo.classList.add(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.remove(\"d-none\");\n    progressBar.classList.add(\"flex\");\n  }; //stop current session\n\n\n  const handleStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setDisplay(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25); // disable stop button after click\n\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true); //hiding session info after stop click\n\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\"); //re-enable timer buttons\n\n    const timerBtns = document.querySelectorAll(\"#timerButton\"); ///iterate nodeList and remove disable\n\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.removeAttribute(\"disabled\");\n    }\n  };\n\n  const runBreakSession = breakDuration => {\n    console.log(\"starting break session...\");\n    handleDisplay(); // use interval to count down break time\n\n    console.log(breakDuration);\n  };\n\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    console.log(\"counting\", \"focusCount:\", focusCount, focusDuration); //Counts focus time\n\n    if (focusCount > 0) {\n      setFocusCount(focusCount - 1);\n      setTimeRemaining(focusCount);\n      setTimeElapsed(prevCount => prevCount + 1);\n      console.log(timeElapsed); //ADD aria handler now\n    } else {\n      console.log(\"focus session completed\");\n      setIsTimerRunning(null);\n      setTimeRemaining(0);\n      runBreakSession();\n    }\n  }, isTimerRunning ? 1000 : null); //sets display\n\n  const [display, setDisplay] = useState(\"Focusing for\");\n\n  const handleDisplay = () => {\n    setDisplay(\"On Break\");\n  }; ////STATES\n\n\n  const [focusCount, setFocusCount] = useState(25); //set focus duration label\n\n  const [focusDuration, setFocusDuration] = useState(focusCount); //set break\n\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakCount, setBreakCount] = useState; //time remaining\n\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(focusCount - timeElapsed); //mg:\n  //focus time\n\n  const handleFocusIncrease = () => {\n    console.log(\"increasing focus time...\");\n\n    if (focusDuration < 60) {\n      setFocusCount(prevCount => prevCount + 5);\n      setFocusDuration(prevCount => prevCount + 5);\n    } else {\n      console.log(\"max duration reached\");\n    }\n\n    console.log(\"focusDuration:\", focusDuration, \"focusCount:\", focusCount);\n  };\n\n  const handleFocusDecrease = () => {\n    console.log(\"decreasing focus time...\");\n\n    if (focusDuration > 5) {\n      setFocusCount(prevCount => prevCount - 5);\n      setFocusDuration(prevCount => prevCount - 5);\n    } else {\n      console.log(\"min duration reached\");\n    }\n\n    console.log(\"focusCount:\", focusCount, \"focusDuration:\", focusDuration);\n  }; //break time\n\n\n  const handleBreakIncrease = () => {\n    console.log(\"increasing break...\");\n\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n    } else {\n      console.log(\"max duration reached\");\n    }\n\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  };\n\n  const handleBreakDecrease = () => {\n    console.log(\"decreasing break...\");\n\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n    } else {\n      console.log(\"min duration reached\");\n    }\n\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  }; //handle progress bar\n\n\n  const handleAria = () => {\n    const percent = timeElapsed / focusDuration * 100;\n    const progressBar = document.querySelector(\".progress-bar\");\n    progressBar.setAttribute(\"aria-valuenow\", `${percent}%`);\n    progressBar.style.width = `${percent}%`;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleFocusDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleFocusIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-break\",\n    onClick: handleBreakDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-break\",\n    onClick: handleBreakIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary disabled\",\n    id: \"stopBtn\",\n    title: \"Stop the session\",\n    onClick: handleStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"sessionInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 13\n    }\n  }, display, \" \", minutesToDuration(focusCount), \" minutes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 13\n    }\n  }, minutesToDuration(timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"paused\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 17\n    }\n  }, \"PAUSED\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress d-none\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","Pomodoro","isTimerRunning","setIsTimerRunning","playPause","handlePlay","prevState","console","log","paused","document","querySelector","classList","add","remove","handleAria","stopBtn","timerBtns","querySelectorAll","btn","setAttribute","sessionInfo","progressBar","handleStop","setDisplay","setFocusCount","setFocusDuration","getAttribute","removeAttribute","runBreakSession","breakDuration","handleDisplay","focusCount","focusDuration","setTimeRemaining","setTimeElapsed","prevCount","timeElapsed","display","setBreakDuration","breakCount","setBreakCount","timeRemaining","handleFocusIncrease","handleFocusDecrease","handleBreakIncrease","handleBreakDecrease","percent","style","width","oi","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n\n  //mg:\n  function playPause() {\n    handlePlay();\n    setIsTimerRunning((prevState) => !prevState);\n\n    if (isTimerRunning == true) {\n      console.log(\"Pause\");\n      //display paused div\n      const paused = document.querySelector(\"#paused\");\n      paused.classList.add(\"d-block\");\n      paused.classList.remove(\"d-none\");\n    } else if (isTimerRunning == false) {\n      console.log(\"Play\");\n      // hide paused div\n      const paused = document.querySelector(\"#paused\");\n      paused.classList.add(\"d-none\");\n      paused.classList.remove(\"d-block\");\n      //on play handle progress bar\n      handleAria();\n    }\n  }\n\n  const handlePlay = () => {\n    //enable stop button\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n\n    //disable timer buttons\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    ///iterate nodeList and add disable buttons\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.setAttribute(\"disabled\", true);\n    }\n    //showing session info after play click\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.remove(\"d-none\");\n    sessionInfo.classList.add(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.remove(\"d-none\");\n    progressBar.classList.add(\"flex\");\n  };\n\n  //stop current session\n  const handleStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setDisplay(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25);\n    // disable stop button after click\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n    //hiding session info after stop click\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n    //re-enable timer buttons\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    ///iterate nodeList and remove disable\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.removeAttribute(\"disabled\");\n    }\n  };\n\n  const runBreakSession = (breakDuration) => {\n    console.log(\"starting break session...\");\n    handleDisplay();\n    // use interval to count down break time\n    console.log(breakDuration);\n  };\n\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      console.log(\"counting\", \"focusCount:\", focusCount, focusDuration);\n\n      //Counts focus time\n      if (focusCount > 0) {\n        setFocusCount(focusCount - 1);\n        setTimeRemaining(focusCount);\n        setTimeElapsed((prevCount) => prevCount + 1);\n        console.log(timeElapsed);\n        //ADD aria handler now\n      } else {\n        console.log(\"focus session completed\");\n        setIsTimerRunning(null);\n        setTimeRemaining(0);\n        runBreakSession();\n      }\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  //sets display\n  const [display, setDisplay] = useState(\"Focusing for\");\n  const handleDisplay = () => {\n    setDisplay(\"On Break\");\n  };\n\n  ////STATES\n  const [focusCount, setFocusCount] = useState(25);\n  //set focus duration label\n  const [focusDuration, setFocusDuration] = useState(focusCount);\n\n  //set break\n  const [breakDuration, setBreakDuration] = useState(5);\n\tconst [breakCount, setBreakCount] = useState\n\n  //time remaining\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(focusCount - timeElapsed);\n\n  //mg:\n  //focus time\n  const handleFocusIncrease = () => {\n    console.log(\"increasing focus time...\");\n    if (focusDuration < 60) {\n      setFocusCount((prevCount) => prevCount + 5);\n      setFocusDuration((prevCount) => prevCount + 5);\n    } else {\n      console.log(\"max duration reached\");\n    }\n    console.log(\"focusDuration:\", focusDuration, \"focusCount:\", focusCount);\n  };\n\n  const handleFocusDecrease = () => {\n    console.log(\"decreasing focus time...\");\n    if (focusDuration > 5) {\n      setFocusCount((prevCount) => prevCount - 5);\n      setFocusDuration((prevCount) => prevCount - 5);\n    } else {\n      console.log(\"min duration reached\");\n    }\n    console.log(\"focusCount:\", focusCount, \"focusDuration:\", focusDuration);\n  };\n\n  //break time\n  const handleBreakIncrease = () => {\n    console.log(\"increasing break...\");\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n    } else {\n      console.log(\"max duration reached\");\n    }\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  };\n\n  const handleBreakDecrease = () => {\n    console.log(\"decreasing break...\");\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n    } else {\n      console.log(\"min duration reached\");\n    }\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  };\n  //handle progress bar\n  const handleAria = () => {\n    const percent = (timeElapsed / focusDuration) * 100;\n    const progressBar = document.querySelector(\".progress-bar\");\n    progressBar.setAttribute(\"aria-valuenow\", `${percent}%`);\n    progressBar.style.width = `${percent}%`;\n  };\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"decrease-focus\"\n                onClick={handleFocusDecrease}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"increase-focus\"\n                onClick={handleFocusIncrease}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleBreakDecrease}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"increase-break\"\n                  onClick={handleBreakIncrease}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary disabled\"\n              id=\"stopBtn\"\n              title=\"Stop the session\"\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2 d-none\" id=\"sessionInfo\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {display} {minutesToDuration(focusCount)} minutes\n            </h2>\n            <div>{/* delete this div when done testing */}</div>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {minutesToDuration(timeRemaining)} remaining\n            </p>\n            <div className=\"row mb-2 d-none\" id=\"paused\">\n              <div className=\"col\">\n                <h3>PAUSED</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress d-none\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}