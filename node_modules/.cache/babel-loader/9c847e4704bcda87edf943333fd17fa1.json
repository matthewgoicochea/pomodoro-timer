{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\nimport Timer from \"./Timer\";\nimport TimeRemaining from \"./TimeRemaining\";\nimport SessionTitle from \"./SessionTitle\";\nimport SessionInfo from \"./SessionInfo\";\n\nfunction Pomodoro() {\n  // STATES\n  //set focus\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  const [isFocus, setIsFocus] = useState(true); //set break\n\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60); //set progress bar\n\n  const [barWidth, setBarWidth] = useState(0);\n  const [ariaValue, setAriaValue] = useState(0); // TIMER\n  //Timer State\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    onPlay();\n  }, isTimerRunning ? 1000 : null); // MAIN BUTTONS\n  // ON PLAY/PAUSE CLICK\n\n  function PlayPause() {\n    // toggle timer\n    setIsTimerRunning(prevState => !prevState); // LOGS STATUS / LAUNCHES ON PAUSE\n\n    if (isTimerRunning === true) {\n      console.log(\"PAUSE\");\n    } else if (isTimerRunning === false) {\n      console.log(\"PLAY\");\n      showSessionInfo();\n      enableStopButton();\n      disableTimerBtns();\n      setFocusCount(focusDuration * 60);\n      setBreakCount(breakDuration * 60);\n    }\n  } // ON PLAY - runs every second\n\n\n  const onPlay = () => {\n    runFullSession();\n    if (focusCount === 0 && breakCount === breakDuration * 60) handleAudio();\n    if (breakCount === 0) handleAudio();\n  }; // ON STOP\n\n\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setIsFocus(true);\n    setFocusCount(focusDuration * 60);\n    setBreakCount(breakDuration * 60);\n    disableStopButton(); //hideSessionInfo();\n\n    enableTimerButtons();\n  }; // Session Handler\n\n\n  function runFullSession() {\n    if (focusCount > 0) {\n      setFocusCount(prevCount => prevCount - 1);\n    } else {\n      setIsFocus(false);\n\n      if (breakCount > 0) {\n        setBreakCount(prevCount => prevCount - 1);\n      } else {\n        console.log(\"Restarting Session\");\n        setIsFocus(true);\n        setFocusCount(focusDuration * 60);\n        setBreakCount(breakDuration * 60);\n      }\n    } // set progress bar values\n\n\n    if (isFocus) {\n      const timeElapsedA = focusDuration * 60 - focusCount;\n      let percentA = timeElapsedA / (focusDuration * 60) * 100;\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentA}%`;\n      bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n    } else {\n      const timeElapsedB = breakDuration * 60 - breakCount;\n      let percentB = timeElapsedB / (breakDuration * 60) * 100;\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentB}%`;\n      bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n    }\n  } ///HELPER FUNCTIONS///\n\n\n  const audioElement = document.getElementsByClassName(\"audio\")[0];\n\n  function enableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function disableTimerBtns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true);\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  function handleAudio() {\n    audioElement.play();\n  }\n  /*\n  function handleProgressBar() {\n    isFocus ? barA() : barB();\n  }\n  */\n  ///Button Handlers//\n\n\n  useEffect(() => {\n    if (!isTimerRunning) {\n      setFocusCount(focusDuration * 60);\n      setBreakCount(breakDuration * 60);\n    }\n  }, [focusDuration, breakDuration]); ///RENDER////\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    title: \"Focus Duration\",\n    upperLimit: 60,\n    lowerLimit: 5,\n    changeInterval: 5,\n    value: focusDuration,\n    onChange: setFocusDuration,\n    disabled: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Timer, {\n    title: \"Break Duration\",\n    changeInterval: 1,\n    value: breakDuration,\n    onChange: setBreakDuration,\n    disabled: isTimerRunning,\n    upperLimit: 15,\n    lowerLimit: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: PlayPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary disabled\",\n    id: \"stopBtn\",\n    title: \"Stop the session\",\n    onClick: onStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SessionInfo, {\n    isFocus: isFocus,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    focusCount: focusCount,\n    breakCount: breakCount,\n    isTimerRunning: isTimerRunning,\n    barWidth: barWidth,\n    setBarWidth: setBarWidth,\n    ariaValue: ariaValue,\n    setAriaValue: setAriaValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;\n/*\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function hidePaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  }\n*/\n\n/**\n \n<div className=\"row mb-2 d-none\" id=\"sessionInfo\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration }\n            <h2 data-testid=\"session-title\">\n              <SessionTitle\n                isFocus={isFocus}\n                focusDuration={focusDuration}\n                breakDuration={breakDuration}\n              />\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session }\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              <TimeRemaining\n                isFocus={isFocus}\n                focusCount={focusCount}\n                breakCount={breakCount}\n              />{\" \"}\n              remaining\n            </p>\n            <Audio />\n            <Paused isTimerRunning={isTimerRunning} />\n          </div>\n        </div>\n        <ProgressBar\n          focusCount={focusCount}\n          focusDuration={focusDuration}\n          breakCount={breakCount}\n          breakDuration={breakDuration}\n          barWidth={barWidth}\n          setBarWidth={setBarWidth}\n          ariaValue={ariaValue}\n          setAriaValue={setAriaValue}\n        />\n\n */","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Audio","Paused","ProgressBar","Timer","TimeRemaining","SessionTitle","SessionInfo","Pomodoro","focusDuration","setFocusDuration","focusCount","setFocusCount","isFocus","setIsFocus","breakDuration","setBreakDuration","breakCount","setBreakCount","barWidth","setBarWidth","ariaValue","setAriaValue","isTimerRunning","setIsTimerRunning","onPlay","PlayPause","prevState","console","log","showSessionInfo","enableStopButton","disableTimerBtns","runFullSession","handleAudio","onStop","disableStopButton","enableTimerButtons","prevCount","timeElapsedA","percentA","bar","document","querySelector","style","width","setAttribute","toFixed","timeElapsedB","percentB","audioElement","getElementsByClassName","stopBtn","classList","remove","add","getAttribute","timerBtns","querySelectorAll","btn","removeAttribute","hideSessionInfo","sessionInfo","progressBar","play","oi"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\nimport Timer from \"./Timer\";\nimport TimeRemaining from \"./TimeRemaining\";\nimport SessionTitle from \"./SessionTitle\";\nimport SessionInfo from \"./SessionInfo\";\n\nfunction Pomodoro() {\n  // STATES\n  //set focus\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  const [isFocus, setIsFocus] = useState(true);\n  //set break\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60);\n  //set progress bar\n  const [barWidth, setBarWidth] = useState(0);\n  const [ariaValue, setAriaValue] = useState(0);\n\n  // TIMER\n  //Timer State\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      onPlay();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  // MAIN BUTTONS\n  // ON PLAY/PAUSE CLICK\n  function PlayPause() {\n    // toggle timer\n    setIsTimerRunning((prevState) => !prevState);\n    // LOGS STATUS / LAUNCHES ON PAUSE\n    if (isTimerRunning === true) {\n      console.log(\"PAUSE\");\n    } else if (isTimerRunning === false) {\n      console.log(\"PLAY\");\n      showSessionInfo();\n      enableStopButton();\n      disableTimerBtns();\n      setFocusCount(focusDuration * 60);\n      setBreakCount(breakDuration * 60);\n    }\n  }\n\n  // ON PLAY - runs every second\n  const onPlay = () => {\n    runFullSession();\n    if (focusCount === 0 && breakCount === breakDuration * 60) handleAudio();\n    if (breakCount === 0) handleAudio();\n  };\n\n  // ON STOP\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setIsFocus(true);\n    setFocusCount(focusDuration * 60);\n    setBreakCount(breakDuration * 60);\n    disableStopButton();\n    //hideSessionInfo();\n    enableTimerButtons();\n  };\n\n  // Session Handler\n\n  function runFullSession() {\n    if (focusCount > 0) {\n      setFocusCount((prevCount) => prevCount - 1);\n    } else {\n      setIsFocus(false);\n      if (breakCount > 0) {\n        setBreakCount((prevCount) => prevCount - 1);\n      } else {\n        console.log(\"Restarting Session\");\n        setIsFocus(true);\n        setFocusCount(focusDuration * 60);\n        setBreakCount(breakDuration * 60);\n      }\n    }\n    // set progress bar values\n    if (isFocus) {\n      const timeElapsedA = focusDuration * 60 - focusCount;\n      let percentA = (timeElapsedA / (focusDuration * 60)) * 100;\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentA}%`;\n      bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n    } else {\n      const timeElapsedB = breakDuration * 60 - breakCount;\n      let percentB = (timeElapsedB / (breakDuration * 60)) * 100;\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentB}%`;\n      bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n    }\n  }\n\n  ///HELPER FUNCTIONS///\n\n  const audioElement = document.getElementsByClassName(\"audio\")[0];\n\n  function enableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function disableTimerBtns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true);\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  function handleAudio() {\n    audioElement.play();\n  }\n  /*\n  function handleProgressBar() {\n    isFocus ? barA() : barB();\n  }\n*/\n  ///Button Handlers//\n  useEffect(() => {\n    if (!isTimerRunning) {\n      setFocusCount(focusDuration * 60);\n      setBreakCount(breakDuration * 60);\n    }\n  }, [focusDuration, breakDuration]);\n\n  ///RENDER////\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <Timer\n              title=\"Focus Duration\"\n              upperLimit={60}\n              lowerLimit={5}\n              changeInterval={5}\n              value={focusDuration}\n              onChange={setFocusDuration}\n              disabled={isTimerRunning}\n            />\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <Timer\n                title=\"Break Duration\"\n                changeInterval={1}\n                value={breakDuration}\n                onChange={setBreakDuration}\n                disabled={isTimerRunning}\n                upperLimit={15}\n                lowerLimit={1}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={PlayPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary disabled\"\n              id=\"stopBtn\"\n              title=\"Stop the session\"\n              onClick={onStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <SessionInfo\n          isFocus={isFocus}\n          focusDuration={focusDuration}\n          breakDuration={breakDuration}\n          focusCount={focusCount}\n          breakCount={breakCount}\n          isTimerRunning={isTimerRunning}\n          barWidth={barWidth}\n          setBarWidth={setBarWidth}\n          ariaValue={ariaValue}\n          setAriaValue={setAriaValue}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n\n/*\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function hidePaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  }\n*/\n\n/**\n \n<div className=\"row mb-2 d-none\" id=\"sessionInfo\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration }\n            <h2 data-testid=\"session-title\">\n              <SessionTitle\n                isFocus={isFocus}\n                focusDuration={focusDuration}\n                breakDuration={breakDuration}\n              />\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session }\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              <TimeRemaining\n                isFocus={isFocus}\n                focusCount={focusCount}\n                breakCount={breakCount}\n              />{\" \"}\n              remaining\n            </p>\n            <Audio />\n            <Paused isTimerRunning={isTimerRunning} />\n          </div>\n        </div>\n        <ProgressBar\n          focusCount={focusCount}\n          focusDuration={focusDuration}\n          breakCount={breakCount}\n          breakDuration={breakDuration}\n          barWidth={barWidth}\n          setBarWidth={setBarWidth}\n          ariaValue={ariaValue}\n          setAriaValue={setAriaValue}\n        />\n\n */\n"]},"metadata":{},"sourceType":"module"}