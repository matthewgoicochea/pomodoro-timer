{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.jsx\";\nimport React from \"react\";\n\nfunction ProgressBar({\n  isFocus,\n  focusCount,\n  focusDuration,\n  breakCount,\n  breakDuration\n}) {\n  const timeElapsedA = focusDuration * 60 - focusCount;\n  const timeElapsedB = breakDuration * 60 - breakCount;\n  let percentA = timeElapsedA / (focusDuration * 60) * 100;\n  let percentB = timeElapsedB / (breakDuration * 60) * 100;\n  const bar = document.querySelector(\".progress-bar\");\n\n  const barA = () => {\n    bar.style.width = `${percentA}%`;\n    bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n  };\n\n  const barB = () => {\n    bar.style.width = `${percentB}%`;\n    bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n  }; //isFocus ? barA : barB\n\n\n  if (isFocus) {\n    //barA\n    const width = `${percentA}%`;\n  } else {\n    //barB\n    const width = `${percentB}%`;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"{width}%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/ProgressBar.jsx"],"names":["React","ProgressBar","isFocus","focusCount","focusDuration","breakCount","breakDuration","timeElapsedA","timeElapsedB","percentA","percentB","bar","document","querySelector","barA","style","width","setAttribute","toFixed","barB"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,WAAT,CAAqB;AACnBC,EAAAA,OADmB;AAEnBC,EAAAA,UAFmB;AAGnBC,EAAAA,aAHmB;AAInBC,EAAAA,UAJmB;AAKnBC,EAAAA;AALmB,CAArB,EAMG;AACD,QAAMC,YAAY,GAAGH,aAAa,GAAG,EAAhB,GAAqBD,UAA1C;AACA,QAAMK,YAAY,GAAGF,aAAa,GAAG,EAAhB,GAAqBD,UAA1C;AAEA,MAAII,QAAQ,GAAIF,YAAY,IAAIH,aAAa,GAAG,EAApB,CAAb,GAAwC,GAAvD;AACA,MAAIM,QAAQ,GAAIF,YAAY,IAAIF,aAAa,GAAG,EAApB,CAAb,GAAwC,GAAvD;AAEA,QAAMK,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,eAAvB,CAAZ;;AAEA,QAAMC,IAAI,GAAG,MAAM;AACjBH,IAAAA,GAAG,CAACI,KAAJ,CAAUC,KAAV,GAAmB,GAAEP,QAAS,GAA9B;AACAE,IAAAA,GAAG,CAACM,YAAJ,CAAiB,eAAjB,EAAkCR,QAAQ,CAACS,OAAT,CAAiB,CAAjB,CAAlC;AACD,GAHD;;AAIA,QAAMC,IAAI,GAAG,MAAM;AACjBR,IAAAA,GAAG,CAACI,KAAJ,CAAUC,KAAV,GAAmB,GAAEN,QAAS,GAA9B;AACAC,IAAAA,GAAG,CAACM,YAAJ,CAAiB,eAAjB,EAAkCP,QAAQ,CAACQ,OAAT,CAAiB,CAAjB,CAAlC;AACD,GAHD,CAbC,CAiBD;;;AACA,MAAIhB,OAAJ,EAAa;AACX;AACA,UAAMc,KAAK,GAAI,GAAEP,QAAS,GAA1B;AACD,GAHD,MAGO;AACL;AACA,UAAMO,KAAK,GAAI,GAAEN,QAAS,GAA1B;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB;AAKE,qBAAc,GALhB,CAKoB;AALpB;AAME,IAAA,KAAK,EAAE;AAAEM,MAAAA,KAAK,EAAE;AAAT,KANT,CAMgC;AANhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAgBD;;AAED,eAAef,WAAf","sourcesContent":["import React from \"react\";\n\nfunction ProgressBar({\n  isFocus,\n  focusCount,\n  focusDuration,\n  breakCount,\n  breakDuration,\n}) {\n  const timeElapsedA = focusDuration * 60 - focusCount;\n  const timeElapsedB = breakDuration * 60 - breakCount;\n\n  let percentA = (timeElapsedA / (focusDuration * 60)) * 100;\n  let percentB = (timeElapsedB / (breakDuration * 60)) * 100;\n\n  const bar = document.querySelector(\".progress-bar\");\n\n  const barA = () => {\n    bar.style.width = `${percentA}%`;\n    bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n  };\n  const barB = () => {\n    bar.style.width = `${percentB}%`;\n    bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n  };\n  //isFocus ? barA : barB\n  if (isFocus) {\n    //barA\n    const width = `${percentA}%`;\n  } else {\n    //barB\n    const width = `${percentB}%`;\n  }\n\n  return (\n    <div className=\"row mb-2\">\n      <div className=\"col\">\n        <div className=\"progress d-none\">\n          <div\n            className=\"progress-bar\"\n            role=\"progressbar\"\n            aria-valuemin=\"0\"\n            aria-valuemax=\"100\"\n            aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: \"{width}%\" }} // TODO: Increase width % as elapsed time increases\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ProgressBar;\n"]},"metadata":{},"sourceType":"module"}