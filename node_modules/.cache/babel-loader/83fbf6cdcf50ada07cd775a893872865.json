{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionInfo.jsx\";\nimport React from \"react\";\nimport SessionTitle from \"./SessionTitle\";\nimport TimeRemaining from \"./TimeRemaining\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction SessionInfo({\n  //props\n  isFocus,\n  focusDuration,\n  breakDuration,\n  focusCount,\n  breakCount,\n  isTimerRunning,\n  barWidth,\n  setBarWidth,\n  ariaValue,\n  setAriaValue\n}) {\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  if (isTimerRunning) {\n    console.log(\"yes\");\n    showSessionInfo();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SessionTitle, {\n    isFocus: isFocus,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TimeRemaining, {\n    isFocus: isFocus,\n    focusCount: focusCount,\n    breakCount: breakCount,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), \" \", \"remaining\"), /*#__PURE__*/React.createElement(Audio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Paused, {\n    isTimerRunning: isTimerRunning,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ProgressBar, {\n    focusCount: focusCount,\n    focusDuration: focusDuration,\n    breakCount: breakCount,\n    breakDuration: breakDuration,\n    barWidth: barWidth,\n    setBarWidth: setBarWidth,\n    ariaValue: ariaValue,\n    setAriaValue: setAriaValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default SessionInfo;","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/SessionInfo.jsx"],"names":["React","SessionTitle","TimeRemaining","Audio","Paused","ProgressBar","SessionInfo","isFocus","focusDuration","breakDuration","focusCount","breakCount","isTimerRunning","barWidth","setBarWidth","ariaValue","setAriaValue","hideSessionInfo","sessionInfo","document","querySelector","classList","add","remove","progressBar","showSessionInfo","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport SessionTitle from \"./SessionTitle\";\nimport TimeRemaining from \"./TimeRemaining\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction SessionInfo({\n  //props\n  isFocus,\n  focusDuration,\n  breakDuration,\n  focusCount,\n  breakCount,\n  isTimerRunning,\n  barWidth,\n  setBarWidth,\n  ariaValue,\n  setAriaValue,\n}) {\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  if (isTimerRunning) {\n    console.log(\"yes\");\n    showSessionInfo();\n\n  }\n\n  return (\n    <div>\n      {/* TODO: This area should show only when a focus or break session is running or pauses */}\n      <div className=\"col\">\n        {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n        <h2 data-testid=\"session-title\">\n          <SessionTitle\n            isFocus={isFocus}\n            focusDuration={focusDuration}\n            breakDuration={breakDuration}\n          />\n        </h2>\n        {/* TODO: Update message below to include time remaining in the current session */}\n        <p className=\"lead\" data-testid=\"session-sub-title\">\n          <TimeRemaining\n            isFocus={isFocus}\n            focusCount={focusCount}\n            breakCount={breakCount}\n          />{\" \"}\n          remaining\n        </p>\n        <Audio />\n        <Paused isTimerRunning={isTimerRunning} />\n      </div>\n      <ProgressBar\n        focusCount={focusCount}\n        focusDuration={focusDuration}\n        breakCount={breakCount}\n        breakDuration={breakDuration}\n        barWidth={barWidth}\n        setBarWidth={setBarWidth}\n        ariaValue={ariaValue}\n        setAriaValue={setAriaValue}\n      />\n    </div>\n  );\n}\n\nexport default SessionInfo;\n"]},"metadata":{},"sourceType":"module"}