{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Pomodoro() {\n  ///////////////\n  ////STATES/////\n  ///////////////\n  //set focus\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60); //set break\n\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60); //set title\n  //  const [title, setTitle] = useState(\"Focusing for\");\n\n  const [isFocus, setIsFocus] = useState(true); ///////////\n  ///TIMER///\n  ///////////\n  //Timer State\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    onPlay();\n  }, isTimerRunning ? 1000 : null); //////////////////\n  ///MAIN BUTTONS///\n  //////////////////\n  //ON PLAY/PAUSE CLICK\n\n  function playPause() {\n    //toggle timer\n    setIsTimerRunning(prevState => !prevState); //LOGS STATUS / LAUNCHES ON PAUSE\n\n    if (isTimerRunning === true) {\n      console.log(\"PAUSE\");\n      showPaused();\n    } else if (isTimerRunning === false) {\n      console.log(\"PLAY\");\n      showSessionInfo();\n      enableStopButton();\n      disableTimerBtns();\n      hidePaused();\n      setFocusCount(focusInSeconds);\n      setBreakCount(breakInSeconds);\n    }\n  }\n\n  const focusInSeconds = focusDuration * 60;\n  const breakInSeconds = breakDuration * 60; // ON PLAY - runs every second\n\n  const onPlay = () => {\n    runFullSession();\n    if (focusCount === 0 && breakCount === breakInSeconds) handleAudio();\n    if (breakCount === 0) handleAudio();\n  }; // ON STOP\n\n\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setIsFocus(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25);\n    setBreakCount(5);\n    setBreakDuration(5);\n    disableStopButton();\n    hideSessionInfo();\n    enableTimerButtons();\n  }; //////////////////////\n  ///Session Handler////\n  //////////////////////\n\n\n  function runFullSession() {\n    // handle progress bar\n    handleProgressBar();\n\n    if (focusCount > 0) {\n      setFocusCount(prevCount => prevCount - 1);\n    } else {\n      setIsFocus(\"On Break for\");\n\n      if (breakCount > 0) {\n        setBreakCount(prevCount => prevCount - 1);\n      } else {\n        console.log(\"Restarting Session\");\n        setIsFocus(\"Focusing for\");\n        setFocusCount(focusInSeconds);\n        setBreakCount(breakInSeconds);\n      }\n    }\n  } //////////////////////\n  ///HELPER FUNCTIONS///\n  //////////////////////\n\n\n  const audioElement = document.getElementsByClassName(\"audio\")[0];\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function hidePaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  }\n\n  function enableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function disableTimerBtns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true);\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  function handleAudio() {\n    audioElement.play();\n  }\n\n  function handleProgressBar() {\n    const timeElapsedA = focusInSeconds - focusCount;\n    const timeElapsedB = breakInSeconds - breakCount;\n    let percentA = timeElapsedA / focusInSeconds * 100;\n    let percentB = timeElapsedB / breakInSeconds * 100;\n\n    const barA = () => {\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentA}%`;\n      bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n    };\n\n    const barB = () => {\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentB}%`;\n      bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n    };\n\n    isFocus ? barA() : barB();\n  } ////////////////////\n  ///Button Handlers//\n  ////////////////////\n  //focus increase\n\n\n  const onFocusIncrease = () => {\n    if (focusDuration < 60) {\n      setFocusCount(prevCount => prevCount + 5);\n      setFocusDuration(prevCount => prevCount + 5);\n    }\n  }; //focus decrease\n\n\n  const onFocusDecrease = () => {\n    if (focusDuration > 1) {\n      setFocusCount(prevCount => prevCount - 1);\n      setFocusDuration(prevCount => prevCount - 1);\n    }\n  }; //break increase\n\n\n  const onBreakIncrease = () => {\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n      setBreakCount(breakCount + 1);\n    }\n  }; //break decrease\n\n\n  const onBreakDecrease = () => {\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n      setBreakCount(breakCount - 1);\n    }\n  }; //////////\n  ///END////\n  //////////\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: onFocusDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-focus\",\n    onClick: onFocusIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-break\",\n    onClick: onBreakDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-break\",\n    onClick: onBreakIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary disabled\",\n    id: \"stopBtn\",\n    title: \"Stop the session\",\n    onClick: onStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"sessionInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, isFocus ? \"Focusing for\" : \"On Break for\", \" \", isFocus === \"Focusing for\" ? minutesToDuration(focusDuration) : minutesToDuration(breakDuration), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }, isFocus === \"Focusing for\" ? secondsToDuration(focusCount) : secondsToDuration(breakCount), \" \", \"remaining\"), /*#__PURE__*/React.createElement(Audio, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Paused, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","Audio","Paused","ProgressBar","Pomodoro","focusDuration","setFocusDuration","focusCount","setFocusCount","breakDuration","setBreakDuration","breakCount","setBreakCount","isFocus","setIsFocus","isTimerRunning","setIsTimerRunning","onPlay","playPause","prevState","console","log","showPaused","showSessionInfo","enableStopButton","disableTimerBtns","hidePaused","focusInSeconds","breakInSeconds","runFullSession","handleAudio","onStop","disableStopButton","hideSessionInfo","enableTimerButtons","handleProgressBar","prevCount","audioElement","document","getElementsByClassName","paused","querySelector","classList","add","remove","stopBtn","getAttribute","timerBtns","querySelectorAll","btn","removeAttribute","setAttribute","sessionInfo","progressBar","play","timeElapsedA","timeElapsedB","percentA","percentB","barA","bar","style","width","toFixed","barB","onFocusIncrease","onFocusDecrease","onBreakIncrease","onBreakDecrease","oi"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,mBAArD;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,SAASC,QAAT,GAAoB;AAClB;AACA;AACA;AAEA;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,UAAD,EAAaC,aAAb,IAA8BZ,QAAQ,CAACS,aAAa,GAAG,EAAjB,CAA5C,CAPkB,CAQlB;;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCd,QAAQ,CAAC,CAAD,CAAlD;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAACa,aAAa,GAAG,EAAjB,CAA5C,CAVkB,CAWlB;AACA;;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,IAAD,CAAtC,CAbkB,CAelB;AACA;AACA;AAEA;;AACA,QAAM,CAACmB,cAAD,EAAiBC,iBAAjB,IAAsCpB,QAAQ,CAAC,KAAD,CAApD;AACAE,EAAAA,WAAW,CACT,MAAM;AACJ;AACAmB,IAAAA,MAAM;AACP,GAJQ,EAKTF,cAAc,GAAG,IAAH,GAAU,IALf,CAAX,CArBkB,CA6BlB;AACA;AACA;AAEA;;AACA,WAASG,SAAT,GAAqB;AACnB;AACAF,IAAAA,iBAAiB,CAAEG,SAAD,IAAe,CAACA,SAAjB,CAAjB,CAFmB,CAInB;;AACA,QAAIJ,cAAc,KAAK,IAAvB,EAA6B;AAC3BK,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,MAAAA,UAAU;AACX,KAHD,MAGO,IAAIP,cAAc,KAAK,KAAvB,EAA8B;AACnCK,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAE,MAAAA,eAAe;AACfC,MAAAA,gBAAgB;AAChBC,MAAAA,gBAAgB;AAChBC,MAAAA,UAAU;AACVlB,MAAAA,aAAa,CAACmB,cAAD,CAAb;AACAf,MAAAA,aAAa,CAACgB,cAAD,CAAb;AACD;AACF;;AACD,QAAMD,cAAc,GAAGtB,aAAa,GAAG,EAAvC;AACA,QAAMuB,cAAc,GAAGnB,aAAa,GAAG,EAAvC,CArDkB,CAuDlB;;AACA,QAAMQ,MAAM,GAAG,MAAM;AACnBY,IAAAA,cAAc;AACd,QAAItB,UAAU,KAAK,CAAf,IAAoBI,UAAU,KAAKiB,cAAvC,EAAuDE,WAAW;AAClE,QAAInB,UAAU,KAAK,CAAnB,EAAsBmB,WAAW;AAClC,GAJD,CAxDkB,CA8DlB;;;AACA,QAAMC,MAAM,GAAG,MAAM;AACnBX,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACAL,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAF,IAAAA,UAAU,CAAC,cAAD,CAAV;AACAN,IAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAM,IAAAA,aAAa,CAAC,CAAD,CAAb;AACAF,IAAAA,gBAAgB,CAAC,CAAD,CAAhB;AACAsB,IAAAA,iBAAiB;AACjBC,IAAAA,eAAe;AACfC,IAAAA,kBAAkB;AACnB,GAXD,CA/DkB,CA4ElB;AACA;AACA;;;AAEA,WAASL,cAAT,GAA0B;AACxB;AACAM,IAAAA,iBAAiB;;AACjB,QAAI5B,UAAU,GAAG,CAAjB,EAAoB;AAClBC,MAAAA,aAAa,CAAE4B,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACD,KAFD,MAEO;AACLtB,MAAAA,UAAU,CAAC,cAAD,CAAV;;AACA,UAAIH,UAAU,GAAG,CAAjB,EAAoB;AAClBC,QAAAA,aAAa,CAAEwB,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACD,OAFD,MAEO;AACLhB,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAP,QAAAA,UAAU,CAAC,cAAD,CAAV;AACAN,QAAAA,aAAa,CAACmB,cAAD,CAAb;AACAf,QAAAA,aAAa,CAACgB,cAAD,CAAb;AACD;AACF;AACF,GAhGiB,CAkGlB;AACA;AACA;;;AAEA,QAAMS,YAAY,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,OAAhC,EAAyC,CAAzC,CAArB;;AAEA,WAASjB,UAAT,GAAsB;AACpB,UAAMkB,MAAM,GAAGF,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAf;AACAD,IAAAA,MAAM,CAACE,SAAP,CAAiBC,GAAjB,CAAqB,SAArB;AACAH,IAAAA,MAAM,CAACE,SAAP,CAAiBE,MAAjB,CAAwB,QAAxB;AACD;;AAED,WAASlB,UAAT,GAAsB;AACpB,UAAMc,MAAM,GAAGF,QAAQ,CAACG,aAAT,CAAuB,SAAvB,CAAf;AACAD,IAAAA,MAAM,CAACE,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;AACAH,IAAAA,MAAM,CAACE,SAAP,CAAiBE,MAAjB,CAAwB,SAAxB;AACD;;AAED,WAASpB,gBAAT,GAA4B;AAC1B,UAAMqB,OAAO,GAAGP,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAAhB;AACAI,IAAAA,OAAO,CAACH,SAAR,CAAkBE,MAAlB,CAAyB,UAAzB;AACD;;AAED,WAASZ,iBAAT,GAA6B;AAC3B,UAAMa,OAAO,GAAGP,QAAQ,CAACG,aAAT,CAAuB,UAAvB,CAAhB;AACAI,IAAAA,OAAO,CAACH,SAAR,CAAkBC,GAAlB,CAAsB,UAAtB;AACAE,IAAAA,OAAO,CAACC,YAAR,CAAqB,UAArB,EAAiC,IAAjC;AACD;;AAED,WAASZ,kBAAT,GAA8B;AAC5B,UAAMa,SAAS,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,cAA1B,CAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACzBE,MAAAA,GAAG,CAACC,eAAJ,CAAoB,UAApB;AACD;AACF;;AAED,WAASzB,gBAAT,GAA4B;AAC1B,UAAMsB,SAAS,GAAGT,QAAQ,CAACU,gBAAT,CAA0B,cAA1B,CAAlB;;AACA,SAAK,IAAIC,GAAT,IAAgBF,SAAhB,EAA2B;AACzBE,MAAAA,GAAG,CAACE,YAAJ,CAAiB,UAAjB,EAA6B,IAA7B;AACD;AACF;;AAED,WAASlB,eAAT,GAA2B;AACzB,UAAMmB,WAAW,GAAGd,QAAQ,CAACG,aAAT,CAAuB,cAAvB,CAApB;AACAW,IAAAA,WAAW,CAACV,SAAZ,CAAsBC,GAAtB,CAA0B,QAA1B;AACAS,IAAAA,WAAW,CAACV,SAAZ,CAAsBE,MAAtB,CAA6B,SAA7B;AACA,UAAMS,WAAW,GAAGf,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAApB;AACAY,IAAAA,WAAW,CAACX,SAAZ,CAAsBC,GAAtB,CAA0B,QAA1B;AACAU,IAAAA,WAAW,CAACX,SAAZ,CAAsBE,MAAtB,CAA6B,MAA7B;AACD;;AAED,WAASrB,eAAT,GAA2B;AACzB,UAAM6B,WAAW,GAAGd,QAAQ,CAACG,aAAT,CAAuB,cAAvB,CAApB;AACAW,IAAAA,WAAW,CAACV,SAAZ,CAAsBC,GAAtB,CAA0B,SAA1B;AACAS,IAAAA,WAAW,CAACV,SAAZ,CAAsBE,MAAtB,CAA6B,QAA7B;AACA,UAAMS,WAAW,GAAGf,QAAQ,CAACG,aAAT,CAAuB,WAAvB,CAApB;AACAY,IAAAA,WAAW,CAACX,SAAZ,CAAsBC,GAAtB,CAA0B,MAA1B;AACAU,IAAAA,WAAW,CAACX,SAAZ,CAAsBE,MAAtB,CAA6B,QAA7B;AACD;;AAED,WAASd,WAAT,GAAuB;AACrBO,IAAAA,YAAY,CAACiB,IAAb;AACD;;AAED,WAASnB,iBAAT,GAA6B;AAC3B,UAAMoB,YAAY,GAAG5B,cAAc,GAAGpB,UAAtC;AACA,UAAMiD,YAAY,GAAG5B,cAAc,GAAGjB,UAAtC;AAEA,QAAI8C,QAAQ,GAAIF,YAAY,GAAG5B,cAAhB,GAAkC,GAAjD;AACA,QAAI+B,QAAQ,GAAIF,YAAY,GAAG5B,cAAhB,GAAkC,GAAjD;;AAEA,UAAM+B,IAAI,GAAG,MAAM;AACjB,YAAMC,GAAG,GAAGtB,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAAZ;AACAmB,MAAAA,GAAG,CAACC,KAAJ,CAAUC,KAAV,GAAmB,GAAEL,QAAS,GAA9B;AACAG,MAAAA,GAAG,CAACT,YAAJ,CAAiB,eAAjB,EAAkCM,QAAQ,CAACM,OAAT,CAAiB,CAAjB,CAAlC;AACD,KAJD;;AAKA,UAAMC,IAAI,GAAG,MAAM;AACjB,YAAMJ,GAAG,GAAGtB,QAAQ,CAACG,aAAT,CAAuB,eAAvB,CAAZ;AACAmB,MAAAA,GAAG,CAACC,KAAJ,CAAUC,KAAV,GAAmB,GAAEJ,QAAS,GAA9B;AACAE,MAAAA,GAAG,CAACT,YAAJ,CAAiB,eAAjB,EAAkCO,QAAQ,CAACK,OAAT,CAAiB,CAAjB,CAAlC;AACD,KAJD;;AAMAlD,IAAAA,OAAO,GAAG8C,IAAI,EAAP,GAAYK,IAAI,EAAvB;AACD,GAtLiB,CAwLlB;AACA;AACA;AAEA;;;AACA,QAAMC,eAAe,GAAG,MAAM;AAC5B,QAAI5D,aAAa,GAAG,EAApB,EAAwB;AACtBG,MAAAA,aAAa,CAAE4B,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACA9B,MAAAA,gBAAgB,CAAE8B,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAhB;AACD;AACF,GALD,CA7LkB,CAoMlB;;;AACA,QAAM8B,eAAe,GAAG,MAAM;AAC5B,QAAI7D,aAAa,GAAG,CAApB,EAAuB;AACrBG,MAAAA,aAAa,CAAE4B,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAb;AACA9B,MAAAA,gBAAgB,CAAE8B,SAAD,IAAeA,SAAS,GAAG,CAA5B,CAAhB;AACD;AACF,GALD,CArMkB,CA4MlB;;;AACA,QAAM+B,eAAe,GAAG,MAAM;AAC5B,QAAI1D,aAAa,GAAG,EAApB,EAAwB;AACtB;AACAC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAG,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND,CA7MkB,CAoNlB;;;AACA,QAAMyD,eAAe,GAAG,MAAM;AAC5B,QAAI3D,aAAa,GAAG,CAApB,EAAuB;AACrB;AACAC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAG,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACD;AACF,GAND,CArNkB,CA6NlB;AACA;AACA;;;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBZ,iBAAiB,CAACM,aAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,mBAAY,gBAJd;AAKE,IAAA,OAAO,EAAE6D,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,mBAAY,gBAJd;AAKE,IAAA,OAAO,EAAED,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,eA+BE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,mBAAY,gBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAEmBlE,iBAAiB,CAACU,aAAD,CAFpC,CADF,eAKE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,mBAAY,gBAJd;AAKE,IAAA,OAAO,EAAE2D,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAFF,eAYE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,mBAFZ;AAGE,IAAA,EAAE,EAAC,aAHL;AAIE,mBAAY,gBAJd;AAKE,IAAA,OAAO,EAAED,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAZF,CALF,CADF,CADF,CA/BF,CADF,eAiEE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,6BADZ;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,kBAAW,gBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,iBAFZ;AAGE,mBAAY,YAHd;AAIE,IAAA,KAAK,EAAC,sBAJR;AAKE,IAAA,OAAO,EAAEjD,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AACE,IAAA,SAAS,EAAErB,UAAU,CAAC;AACpBwE,MAAAA,EAAE,EAAE,IADgB;AAEpB,uBAAiB,CAACtD,cAFE;AAGpB,wBAAkBA;AAHE,KAAD,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CALF,eAqBE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,4BAFZ;AAGE,IAAA,EAAE,EAAC,SAHL;AAIE,IAAA,KAAK,EAAC,kBAJR;AAKE,IAAA,OAAO,EAAEgB,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CArBF,CADF,CADF,CAjEF,eAoGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,EAAE,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGlB,OAAO,GAAG,cAAH,GAAoB,cAD9B,EAC8C,GAD9C,EAEGA,OAAO,KAAK,cAAZ,GACGd,iBAAiB,CAACM,aAAD,CADpB,GAEGN,iBAAiB,CAACU,aAAD,CAJvB,EAIwC,GAJxC,YAFF,eAUE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,OAAO,KAAK,cAAZ,GACGb,iBAAiB,CAACO,UAAD,CADpB,GAEGP,iBAAiB,CAACW,UAAD,CAHvB,EAGqC,GAHrC,cAVF,eAgBE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF,CAFF,eAuBE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAvBF,CApGF,CADF;AAgID;;AAED,eAAeP,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport Audio from \"./Audio\";\nimport Paused from \"./Paused\";\nimport ProgressBar from \"./ProgressBar\";\n\nfunction Pomodoro() {\n  ///////////////\n  ////STATES/////\n  ///////////////\n\n  //set focus\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [focusCount, setFocusCount] = useState(focusDuration * 60);\n  //set break\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [breakCount, setBreakCount] = useState(breakDuration * 60);\n  //set title\n  //  const [title, setTitle] = useState(\"Focusing for\");\n  const [isFocus, setIsFocus] = useState(true);\n\n  ///////////\n  ///TIMER///\n  ///////////\n\n  //Timer State\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      onPlay();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  //////////////////\n  ///MAIN BUTTONS///\n  //////////////////\n\n  //ON PLAY/PAUSE CLICK\n  function playPause() {\n    //toggle timer\n    setIsTimerRunning((prevState) => !prevState);\n\n    //LOGS STATUS / LAUNCHES ON PAUSE\n    if (isTimerRunning === true) {\n      console.log(\"PAUSE\");\n      showPaused();\n    } else if (isTimerRunning === false) {\n      console.log(\"PLAY\");\n      showSessionInfo();\n      enableStopButton();\n      disableTimerBtns();\n      hidePaused();\n      setFocusCount(focusInSeconds);\n      setBreakCount(breakInSeconds);\n    }\n  }\n  const focusInSeconds = focusDuration * 60;\n  const breakInSeconds = breakDuration * 60;\n\n  // ON PLAY - runs every second\n  const onPlay = () => {\n    runFullSession();\n    if (focusCount === 0 && breakCount === breakInSeconds) handleAudio();\n    if (breakCount === 0) handleAudio();\n  };\n\n  // ON STOP\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setIsFocus(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25);\n    setBreakCount(5);\n    setBreakDuration(5);\n    disableStopButton();\n    hideSessionInfo();\n    enableTimerButtons();\n  };\n\n  //////////////////////\n  ///Session Handler////\n  //////////////////////\n\n  function runFullSession() {\n    // handle progress bar\n    handleProgressBar();\n    if (focusCount > 0) {\n      setFocusCount((prevCount) => prevCount - 1);\n    } else {\n      setIsFocus(\"On Break for\");\n      if (breakCount > 0) {\n        setBreakCount((prevCount) => prevCount - 1);\n      } else {\n        console.log(\"Restarting Session\");\n        setIsFocus(\"Focusing for\");\n        setFocusCount(focusInSeconds);\n        setBreakCount(breakInSeconds);\n      }\n    }\n  }\n\n  //////////////////////\n  ///HELPER FUNCTIONS///\n  //////////////////////\n\n  const audioElement = document.getElementsByClassName(\"audio\")[0];\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function hidePaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  }\n\n  function enableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function disableTimerBtns() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.setAttribute(\"disabled\", true);\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"flex\");\n    progressBar.classList.remove(\"d-none\");\n  }\n\n  function handleAudio() {\n    audioElement.play();\n  }\n\n  function handleProgressBar() {\n    const timeElapsedA = focusInSeconds - focusCount;\n    const timeElapsedB = breakInSeconds - breakCount;\n\n    let percentA = (timeElapsedA / focusInSeconds) * 100;\n    let percentB = (timeElapsedB / breakInSeconds) * 100;\n\n    const barA = () => {\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentA}%`;\n      bar.setAttribute(\"aria-valuenow\", percentA.toFixed(2));\n    };\n    const barB = () => {\n      const bar = document.querySelector(\".progress-bar\");\n      bar.style.width = `${percentB}%`;\n      bar.setAttribute(\"aria-valuenow\", percentB.toFixed(2));\n    };\n\n    isFocus ? barA() : barB();\n  }\n\n  ////////////////////\n  ///Button Handlers//\n  ////////////////////\n\n  //focus increase\n  const onFocusIncrease = () => {\n    if (focusDuration < 60) {\n      setFocusCount((prevCount) => prevCount + 5);\n      setFocusDuration((prevCount) => prevCount + 5);\n    }\n  };\n\n  //focus decrease\n  const onFocusDecrease = () => {\n    if (focusDuration > 1) {\n      setFocusCount((prevCount) => prevCount - 1);\n      setFocusDuration((prevCount) => prevCount - 1);\n    }\n  };\n\n  //break increase\n  const onBreakIncrease = () => {\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n      setBreakCount(breakCount + 1);\n    }\n  };\n  //break decrease\n  const onBreakDecrease = () => {\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n      setBreakCount(breakCount - 1);\n    }\n  };\n\n  //////////\n  ///END////\n  //////////\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"decrease-focus\"\n                onClick={onFocusDecrease}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"increase-focus\"\n                onClick={onFocusIncrease}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"decrease-break\"\n                  onClick={onBreakDecrease}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"increase-break\"\n                  onClick={onBreakIncrease}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary disabled\"\n              id=\"stopBtn\"\n              title=\"Stop the session\"\n              onClick={onStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2 d-none\" id=\"sessionInfo\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {isFocus ? \"Focusing for\" : \"On Break for\"}{\" \"}\n              {isFocus === \"Focusing for\"\n                ? minutesToDuration(focusDuration)\n                : minutesToDuration(breakDuration)}{\" \"}\n              minutes\n            </h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {isFocus === \"Focusing for\"\n                ? secondsToDuration(focusCount)\n                : secondsToDuration(breakCount)}{\" \"}\n              remaining\n            </p>\n            <Audio />\n            <Paused />\n          </div>\n        </div>\n        <ProgressBar />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}