{"ast":null,"code":"var _jsxFileName = \"/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  //////////////////\n  ///MAIN BUTTONS///\n  //////////////////\n  //ON PLAY/PAUSE CLICK\n  function playPause() {\n    //toggle timer\n    setIsTimerRunning(prevState => !prevState); //ON PAUSE\n\n    if (isTimerRunning === true) {\n      onPause();\n    } else if (isTimerRunning === false) {\n      // ON PLAY\n      onPlay();\n    } //handle progress bar\n\n\n    handleProgressBar();\n  } // ON PLAY\n\n\n  const onPlay = () => {\n    console.log(\"Play\");\n    runFocusSession(); //enable stop button\n\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\"); //disable timer buttons\n\n    const timerBtns = document.querySelectorAll(\"#timerButton\"); ///iterate nodeList and add disable buttons\n\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.setAttribute(\"disabled\", true);\n    } //showing session info after play click\n\n\n    showSessionInfo();\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.remove(\"d-none\");\n    progressBar.classList.add(\"flex\"); // hide paused notification div\n\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  }; // ON PAUSE\n\n\n  const onPause = () => {\n    console.log(\"Paused\");\n    console.log(\"Remaining:\");\n    console.log(`focusCount:${focusCount} focusDuration:${focusDuration}`);\n    console.log(`breakCount:${breakCount} breakDuration:${breakDuration}`); //show paused notification div\n\n    showPaused();\n  }; // ON STOP\n\n\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setTitle(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25);\n    setBreakCount(5);\n    setBreakDuration(5); // disable stop button after click\n\n    disableStopButton(); //hiding session info after stop click\n\n    hideSessionInfo(); //hide progress bar\n\n    hideProgressBar(); //re-enable timer buttons\n\n    enableTimerButtons();\n  }; //////////////////////\n  ///HELPER FUNCTIONS///\n  //////////////////////\n\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n  }\n\n  function hideProgressBar() {\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  } //handle progress bar\n\n\n  const handleProgressBar = () => {\n    const percent = timeElapsed / focusDuration * 100;\n    const progressBar = document.querySelector(\".progress-bar\");\n    progressBar.setAttribute(\"aria-valuenow\", `${percent}%`);\n    progressBar.style.width = `${percent}%`;\n  }; //////////////////////\n  ///Session Handlers///\n  //////////////////////\n\n\n  const runFocusSession = () => {\n    if (focusCount > 0) {\n      console.log(\"FocusCount:\", focusCount, \"FocusDuration:\", focusDuration);\n      console.log(`BreakCount: ${breakCount} BreakDuration: ${breakDuration}`);\n      setFocusCount(focusCount - 1);\n      setTimeRemaining(focusCount);\n      setTimeElapsed(prevCount => prevCount + 1); //console.log(\"timeElapsed:\", timeElapsed);\n      //ADD aria handler now\n    } else {\n      console.log(\"Focus Session Complete\"); //reset focus count\n\n      setFocusCount(focusDuration);\n      setTimeRemaining(0);\n      setTitle(\"On Break for\");\n      runBreakSession();\n    }\n  };\n\n  const runBreakSession = () => {\n    if (breakCount > 0) {\n      console.log(\"BreakCount:\", breakCount, \"BreakDuration:\", breakDuration);\n      console.log(\"FocusCount:\", focusCount, \"FocusDuration:\", focusDuration);\n      setBreakCount(breakCount - 1);\n      setTimeRemaining(breakCount);\n      setTimeElapsed(prevCount => prevCount + 1);\n    } else {\n      console.log(\"Break Session Complete\"); //reset break count\n\n      setBreakCount(breakDuration);\n    }\n  }; ///////////\n  ///TIMER///\n  ///////////\n  //Timer State\n\n\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    //runFocusSession();\n    onPlay();\n  }, isTimerRunning ? 1000 : null); ///////////////\n  ////STATES/////\n  ///////////////\n  //set focus\n\n  const [focusCount, setFocusCount] = useState(25);\n  const [focusDuration, setFocusDuration] = useState(focusCount); //set break\n\n  const [breakCount, setBreakCount] = useState(5);\n  const [breakDuration, setBreakDuration] = useState(breakCount); //set time remaining\n\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(focusCount - timeElapsed); //set title\n\n  const [title, setTitle] = useState(\"Focusing for\"); ////////////////////\n  ///Button Handlers//\n  ////////////////////\n  //focus increase\n\n  const onFocusIncrease = () => {\n    console.log(\"increasing focus time...\");\n\n    if (focusDuration < 60) {\n      setFocusCount(prevCount => prevCount + 5);\n      setFocusDuration(prevCount => prevCount + 5);\n    } else {\n      console.log(\"max duration reached\");\n    }\n\n    console.log(\"focusDuration:\", focusDuration, \"focusCount:\", focusCount);\n  }; //focus decrease\n\n\n  const onFocusDecrease = () => {\n    console.log(\"decreasing focus time...\");\n\n    if (focusDuration > 5) {\n      setFocusCount(prevCount => prevCount - 5);\n      setFocusDuration(prevCount => prevCount - 5);\n    } else {\n      console.log(\"min duration reached\");\n    }\n\n    console.log(\"focusCount:\", focusCount, \"focusDuration:\", focusDuration);\n  }; //break increase\n\n\n  const onBreakIncrease = () => {\n    console.log(\"increasing break...\");\n\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n    } else {\n      console.log(\"max duration reached\");\n    }\n\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  }; //break decrease\n\n\n  const onBreakDecrease = () => {\n    console.log(\"decreasing break...\");\n\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n    } else {\n      console.log(\"min duration reached\");\n    }\n\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  }; //////////\n  ///END////\n  //////////\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: onFocusDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-focus\",\n    onClick: onFocusIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"decrease-break\",\n    onClick: onBreakDecrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    id: \"timerButton\",\n    \"data-testid\": \"increase-break\",\n    onClick: onBreakIncrease,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary disabled\",\n    id: \"stopBtn\",\n    title: \"Stop the session\",\n    onClick: onStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"sessionInfo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 13\n    }\n  }, title, \" \", title === \"Focusing for\" ? minutesToDuration(focusCount) : minutesToDuration(breakCount), \" \", \"minutes\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 13\n    }\n  }, minutesToDuration(timeRemaining), \" remaining\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2 d-none\",\n    id: \"paused\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 17\n    }\n  }, \"PAUSED\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress d-none\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: \"0%\"\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/Matt/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","Pomodoro","playPause","setIsTimerRunning","prevState","isTimerRunning","onPause","onPlay","handleProgressBar","console","log","runFocusSession","stopBtn","document","querySelector","classList","remove","timerBtns","querySelectorAll","btn","setAttribute","showSessionInfo","progressBar","add","paused","focusCount","focusDuration","breakCount","breakDuration","showPaused","onStop","setTitle","setFocusCount","setFocusDuration","setBreakCount","setBreakDuration","disableStopButton","hideSessionInfo","hideProgressBar","enableTimerButtons","getAttribute","removeAttribute","sessionInfo","percent","timeElapsed","style","width","setTimeRemaining","setTimeElapsed","prevCount","runBreakSession","timeRemaining","title","onFocusIncrease","onFocusDecrease","onBreakIncrease","onBreakDecrease","oi","height"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\";\n\nfunction Pomodoro() {\n  //////////////////\n  ///MAIN BUTTONS///\n  //////////////////\n\n  //ON PLAY/PAUSE CLICK\n  function playPause() {\n\t\t\n    //toggle timer\n    setIsTimerRunning((prevState) => !prevState);\n    //ON PAUSE\n    if (isTimerRunning === true) {\n      onPause();\n    } else if (isTimerRunning === false) {\n      // ON PLAY\n      onPlay();\n    }\n    //handle progress bar\n    handleProgressBar();\n  }\n\n  // ON PLAY\n  const onPlay = () => {\n    console.log(\"Play\");\n    \n\n    runFocusSession();\n    //enable stop button\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.remove(\"disabled\");\n    //disable timer buttons\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    ///iterate nodeList and add disable buttons\n    for (let btn of timerBtns) {\n      //console.log(btn);\n      btn.setAttribute(\"disabled\", true);\n    }\n    //showing session info after play click\n    showSessionInfo();\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.remove(\"d-none\");\n    progressBar.classList.add(\"flex\");\n\n    // hide paused notification div\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-none\");\n    paused.classList.remove(\"d-block\");\n  };\n\n  // ON PAUSE\n  const onPause = () => {\n    console.log(\"Paused\");\n    console.log(\"Remaining:\");\n    console.log(`focusCount:${focusCount} focusDuration:${focusDuration}`);\n    console.log(`breakCount:${breakCount} breakDuration:${breakDuration}`);\n    //show paused notification div\n    showPaused();\n  };\n\n  // ON STOP\n  const onStop = () => {\n    console.log(\"Stop\");\n    setIsTimerRunning(false);\n    setTitle(\"Focusing for\");\n    setFocusCount(25);\n    setFocusDuration(25);\n    setBreakCount(5);\n    setBreakDuration(5);\n    // disable stop button after click\n    disableStopButton();\n    //hiding session info after stop click\n    hideSessionInfo();\n    //hide progress bar\n    hideProgressBar();\n    //re-enable timer buttons\n    enableTimerButtons();\n  };\n\n  //////////////////////\n  ///HELPER FUNCTIONS///\n  //////////////////////\n\n  function showPaused() {\n    const paused = document.querySelector(\"#paused\");\n    paused.classList.add(\"d-block\");\n    paused.classList.remove(\"d-none\");\n  }\n\n  function disableStopButton() {\n    const stopBtn = document.querySelector(\"#stopBtn\");\n    stopBtn.classList.add(\"disabled\");\n    stopBtn.getAttribute(\"disabled\", true);\n  }\n\n  function enableTimerButtons() {\n    const timerBtns = document.querySelectorAll(\"#timerButton\");\n    for (let btn of timerBtns) {\n      btn.removeAttribute(\"disabled\");\n    }\n  }\n\n  function hideSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-none\");\n    sessionInfo.classList.remove(\"d-block\");\n  }\n\n  function showSessionInfo() {\n    const sessionInfo = document.querySelector(\"#sessionInfo\");\n    sessionInfo.classList.add(\"d-block\");\n    sessionInfo.classList.remove(\"d-none\");\n  }\n\n  function hideProgressBar() {\n    const progressBar = document.querySelector(\".progress\");\n    progressBar.classList.add(\"d-none\");\n    progressBar.classList.remove(\"flex\");\n  }\n\n  //handle progress bar\n  const handleProgressBar = () => {\n    const percent = (timeElapsed / focusDuration) * 100;\n    const progressBar = document.querySelector(\".progress-bar\");\n    progressBar.setAttribute(\"aria-valuenow\", `${percent}%`);\n    progressBar.style.width = `${percent}%`;\n  };\n\n  //////////////////////\n  ///Session Handlers///\n  //////////////////////\n\n  const runFocusSession = () => {\n    if (focusCount > 0) {\n      console.log(\"FocusCount:\", focusCount, \"FocusDuration:\", focusDuration);\n      console.log(`BreakCount: ${breakCount} BreakDuration: ${breakDuration}`);\n      setFocusCount(focusCount - 1);\n      setTimeRemaining(focusCount);\n      setTimeElapsed((prevCount) => prevCount + 1);\n      //console.log(\"timeElapsed:\", timeElapsed);\n      //ADD aria handler now\n    } else {\n      console.log(\"Focus Session Complete\");\n      //reset focus count\n      setFocusCount(focusDuration);\n      setTimeRemaining(0);\n      setTitle(\"On Break for\");\n      runBreakSession();\n    }\n  };\n\n  const runBreakSession = () => {\n    if (breakCount > 0) {\n      console.log(\"BreakCount:\", breakCount, \"BreakDuration:\", breakDuration);\n      console.log(\"FocusCount:\", focusCount, \"FocusDuration:\", focusDuration);\n      setBreakCount(breakCount - 1);\n      setTimeRemaining(breakCount);\n      setTimeElapsed((prevCount) => prevCount + 1);\n    } else {\n      console.log(\"Break Session Complete\");\n      //reset break count\n      setBreakCount(breakDuration);\n    }\n  };\n\n  ///////////\n  ///TIMER///\n  ///////////\n\n  //Timer State\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      //runFocusSession();\n      onPlay();\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  ///////////////\n  ////STATES/////\n  ///////////////\n\n  //set focus\n  const [focusCount, setFocusCount] = useState(25);\n  const [focusDuration, setFocusDuration] = useState(focusCount);\n  //set break\n  const [breakCount, setBreakCount] = useState(5);\n  const [breakDuration, setBreakDuration] = useState(breakCount);\n  //set time remaining\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [timeRemaining, setTimeRemaining] = useState(focusCount - timeElapsed);\n  //set title\n  const [title, setTitle] = useState(\"Focusing for\");\n\n  ////////////////////\n  ///Button Handlers//\n  ////////////////////\n\n  //focus increase\n  const onFocusIncrease = () => {\n    console.log(\"increasing focus time...\");\n    if (focusDuration < 60) {\n      setFocusCount((prevCount) => prevCount + 5);\n      setFocusDuration((prevCount) => prevCount + 5);\n    } else {\n      console.log(\"max duration reached\");\n    }\n    console.log(\"focusDuration:\", focusDuration, \"focusCount:\", focusCount);\n  };\n  //focus decrease\n  const onFocusDecrease = () => {\n    console.log(\"decreasing focus time...\");\n    if (focusDuration > 5) {\n      setFocusCount((prevCount) => prevCount - 5);\n      setFocusDuration((prevCount) => prevCount - 5);\n    } else {\n      console.log(\"min duration reached\");\n    }\n    console.log(\"focusCount:\", focusCount, \"focusDuration:\", focusDuration);\n  };\n\n  //break increase\n  const onBreakIncrease = () => {\n    console.log(\"increasing break...\");\n    if (breakDuration < 15) {\n      //change count\n      setBreakDuration(breakDuration + 1);\n    } else {\n      console.log(\"max duration reached\");\n    }\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  };\n  //break decrease\n  const onBreakDecrease = () => {\n    console.log(\"decreasing break...\");\n    if (breakDuration > 1) {\n      //change count\n      setBreakDuration(breakDuration - 1);\n    } else {\n      console.log(\"min duration reached\");\n    }\n    console.log(\"count:\", \"n/a\", \"breakDuration:\", breakDuration);\n  };\n\n  //////////\n  ///END////\n  //////////\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"decrease-focus\"\n                onClick={onFocusDecrease}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                id=\"timerButton\"\n                data-testid=\"increase-focus\"\n                onClick={onFocusIncrease}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"decrease-break\"\n                  onClick={onBreakDecrease}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  id=\"timerButton\"\n                  data-testid=\"increase-break\"\n                  onClick={onBreakIncrease}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary disabled\"\n              id=\"stopBtn\"\n              title=\"Stop the session\"\n              onClick={onStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2 d-none\" id=\"sessionInfo\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\">\n              {title}{\" \"}\n              {title === \"Focusing for\"\n                ? minutesToDuration(focusCount)\n                : minutesToDuration(breakCount)}{\" \"}\n              minutes\n            </h2>\n            <div>{/* delete this div when done testing */}</div>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {minutesToDuration(timeRemaining)} remaining\n            </p>\n            <div className=\"row mb-2 d-none\" id=\"paused\">\n              <div className=\"col\">\n                <h3>PAUSED</h3>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress d-none\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow=\"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: \"0%\" }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}